using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace PSLogging {
    public class Textfile : IDisposable {

        protected TextWriter textWriter;
        protected readonly Object syncObject; //= new Object();  //static
        protected string path = null;
        bool disposed = false;
        private bool overwrite = false;
        
        public bool Overwrite {
            get { return this.overwrite; }
            set {
                if(value) {
                    //this.textWriter = TextWriter.Synchronized(new StreamWriter(this.path, false));
                    //this.textWriter = TextWriter.Synchronized(File.CreateText(this.path));
                    this.textWriter = new StreamWriter(this.path, false);
                } else {
                    this.textWriter = TextWriter.Synchronized(File.AppendText(this.path));
                }
            }
        }

        public string Path {
            get { return this.path; }
        }

        public Textfile(string path) {
            if(path.Contains("\\")) {
                string directory = path.Substring(0, path.LastIndexOf("\\"));
                if(!Directory.Exists(directory)) {
                    Directory.CreateDirectory(directory);
                }
            }

            this.path = path;
            this.syncObject = new Object();
            this.textWriter = TextWriter.Synchronized(File.AppendText(this.path));
        }

        public virtual void Write(string message) {
            lock(syncObject) {
                this.textWriter.WriteLine(message);
                this.textWriter.Flush();
            }
        }
        
        public virtual void WriteData(string message) {
            lock(syncObject) {
                this.textWriter.Write(message);
                this.textWriter.Flush();
            }
        }

        public virtual String Read() {
            lock(syncObject) {
                return File.ReadAllText(this.path);
            }
        }

        public void Dispose() {
            this.Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing) {
            if(this.disposed) {
                return;
            }

            if(disposing) {
                this.textWriter.Dispose();
            }
            this.disposed = true;
            return;
        }

    }
}
